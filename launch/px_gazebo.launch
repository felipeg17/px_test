<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="robot_name" default="px"/>
  <arg name="model" default="$(find px_test)/urdf/px_trans.urdf"/>
  <!-- Robot initial pose -->
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" >
        <rosparam param="publish_frequency">50</rosparam>
  </node>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Spawn Model in Gazebo -->
  <node 
    pkg="gazebo_ros" 
    type="spawn_model"
    name="spawn_robot"
    respawn="false"
    args="-x $(arg x) -y $(arg y) -z $(arg z)
          -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
          -urdf
          -param robot_description
          -model $(arg model)"
  />

  <!-- <rosparam file="$(find px_test)/config/pos_controller.yaml" command="load"/> -->
  <rosparam file="$(find px_test)/config/joints.yaml" command="load" ns="joint_state_controller"/>
  <rosparam file="$(find px_test)/config/j1_controller.yaml" command="load" ns="px_j1_controller"/>
  <rosparam file="$(find px_test)/config/j2_controller.yaml" command="load" ns="px_j2_controller"/>
  <rosparam file="$(find px_test)/config/j3_controller.yaml" command="load" ns="px_j3_controller"/>
  <rosparam file="$(find px_test)/config/j4_controller.yaml" command="load" ns="px_j4_controller"/>
  <node 
    name="robot_controller" 
    pkg="controller_manager" 
    type="spawner" 
    respawn="false" 
    output="screen"
    args=  "joint_state_controller
            px_j1_controller
            px_j2_controller
            px_j3_controller
            px_j4_controller"
  />
  <node pkg="rqt_publisher" type="rqt_publisher" name="joint_publisher">
    
  </node>

</launch>  